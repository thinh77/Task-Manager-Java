name: Deploy Spring Boot to GCP VM

on:
  push:
    branches:
      - main # Or your release branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Set up JDK 17 # Or your Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Or 'adopt' or 'oracle'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build with Gradle
        run: ./gradlew build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy to GCP VM via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }} # If using SSH key authentication (more secure) - see notes below
          port: 22 # Default SSH port
          source: build/libs/*.jar # Path to your built JAR file
          target: /home/${{ secrets.VM_USERNAME }}/app.jar # Target directory on the VM

      - name: SSH and Run Application on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }} # If using SSH key authentication (more secure) - see notes below
          port: 22 # Default SSH port
          script: |
            echo "Stopping previous application (if running)..."
            pkill -f app.jar || true # Attempt to stop if running, ignore error if not

            echo "Starting new application..."
            nohup java -jar /home/${{ secrets.VM_USERNAME }}/app.jar > app.log 2>&1 &
            echo "Application started in background. Check app.log for details."
